--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [dbo].[BuildVersion] ON

MERGE INTO [dbo].[BuildVersion] AS [Target]
USING (VALUES
  (1,N'13.0.1601.5','2016-04-29T23:23:58','2017-10-19T00:00:00')
) AS [Source] ([SystemInformationID],[Database Version],[VersionDate],[ModifiedDate])
ON ([Target].[SystemInformationID] = [Source].[SystemInformationID])
WHEN MATCHED AND (
	NULLIF([Source].[Database Version], [Target].[Database Version]) IS NOT NULL OR NULLIF([Target].[Database Version], [Source].[Database Version]) IS NOT NULL OR 
	NULLIF([Source].[VersionDate], [Target].[VersionDate]) IS NOT NULL OR NULLIF([Target].[VersionDate], [Source].[VersionDate]) IS NOT NULL OR 
	NULLIF([Source].[ModifiedDate], [Target].[ModifiedDate]) IS NOT NULL OR NULLIF([Target].[ModifiedDate], [Source].[ModifiedDate]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[Database Version] = [Source].[Database Version], 
  [Target].[VersionDate] = [Source].[VersionDate], 
  [Target].[ModifiedDate] = [Source].[ModifiedDate]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([SystemInformationID],[Database Version],[VersionDate],[ModifiedDate])
 VALUES([Source].[SystemInformationID],[Source].[Database Version],[Source].[VersionDate],[Source].[ModifiedDate])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [dbo].[BuildVersion]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[dbo].[BuildVersion] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO



SET IDENTITY_INSERT [dbo].[BuildVersion] OFF
SET NOCOUNT OFF
GO
