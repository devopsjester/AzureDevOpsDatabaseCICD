# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

resources:
  repositories:
    - repository: tbf
      type: github
      name: devopsjester/TrustButVerify
      endpoint: github.com_devopsjester

stages:
- stage: Builds
  displayName: Build the artifacts to be deployed
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  jobs:
  - job: BuildSqlSolution
    displayName: Build the database schema's dacpac
    pool: 
    #  vmImage: 'windows-latest'
      name: Personal
    steps:
    - checkout: self
    - checkout: tbf
    - task: VSBuild@1
      displayName: Compile the dacpac with the publish-profile
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: SqlAzureDacpacDeployment@1
      displayName: Create a SQL diff script
      inputs:
        azureSubscription: 'Assaf''s Microsoft Azure Internal Consumption(d98ee679-4c4d-4a03-9181-ea7a16d0b5a8)'
        AuthenticationType: 'server'
        ServerName: 'devopsdemos.database.windows.net'
        DatabaseName: 'AW2016demo'
        SqlUsername: '$(SQL_USER)'
        SqlPassword: '$(SQL_PASSWORD)'
        deployType: 'DacpacTask'
        DeploymentAction: 'Script'
        DacpacFile: '$(Build.SourcesDirectory)/DatabaseDevops/AdventureWorks/bin/$(buildConfiguration)/AdventureWorks.dacpac'
        PublishProfile: '$(Build.SourcesDirectory)/DatabaseDevops/AdventureWorks/bin/$(buildConfiguration)/AdventureWorks.dev.publish.xml'
        IpDetectionMethod: 'AutoDetect'
    - task: PowerShell@2
      displayName: 'Display the schema migration script(s) for diagnostics'
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "Migration Scripts"
          Get-ChildItem $(Build.SourcesDirectory)/GeneratedOutputFiles/*.sql | Foreach-Object { 
            Write-Host "*** File: $($_.FullName) ***"
            Get-Content -Path $_
          }
    - task: Pester@10
      inputs:
        scriptFolder: '$(Build.SourcesDirectory)/TrustButVerify/Test-SqlScripts.ps1'
        resultsFile: '$(Build.SourcesDirectory)/DatabaseDevops/AdventureWorks/bin/$(buildConfiguration)/Test-Pester.XML'
        usePSCore: False
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'NUnit'
        testResultsFiles: '$(Build.SourcesDirectory)/DatabaseDevops/AdventureWorks/bin/$(buildConfiguration)/Test-Pester.XML'
        testRunTitle: 'Trust But Verify'
    - task: CopyFiles@2
      displayName: 'Copy dacpac files'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/DatabaseDevops/AdventureWorks/bin/$(buildConfiguration)'
        Contents: |
          **/*.dacpac
          **/*.publish.xml
          **/*.sql
        TargetFolder: '$(Build.ArtifactStagingDirectory)/database'

    - task: CopyFiles@2
      displayName: 'Copy diff script'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/GeneratedOutputFiles'
        Contents: |
          **/*.sql
        TargetFolder: '$(Build.ArtifactStagingDirectory)/database'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/database'
        artifact: 'database'
        publishLocation: 'pipeline'

- stage: Deployments
  displayName: Deploy artifacts to Azure
  jobs:
  - deployment: DeployDatabase
    displayName: Deploy database schema changes to Azure
    pool:
    #  vmImage: 'windows-latest'
      name: Personal
    environment: sql-dev
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: database
            patterns: '**/AdventureWorks.*'
          - task: SqlAzureDacpacDeployment@1
            inputs:
              azureSubscription: 'Assaf''s Microsoft Azure Internal Consumption(d98ee679-4c4d-4a03-9181-ea7a16d0b5a8)'
              AuthenticationType: 'server'
              ServerName: 'devopsdemos.database.windows.net'
              DatabaseName: 'AW2016demo'
              SqlUsername: '$(SQL_USER)'
              SqlPassword: '$(SQL_PASSWORD)'
              deployType: 'DacpacTask'
              DeploymentAction: 'Publish'
              DacpacFile: '$(Pipeline.Workspace)/database/AdventureWorks.dacpac'
              PublishProfile: '$(Pipeline.Workspace)/database/AdventureWorks.dev.publish.xml'
              IpDetectionMethod: 'AutoDetect'
          