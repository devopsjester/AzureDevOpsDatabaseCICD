# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  displayName: Compile DACPAC for AdventureWorks database project
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: SqlAzureDacpacDeployment@1
  displayName: 'Create a DIFF script that compares the dacpac with the target database'
  inputs:
    azureSubscription: 'Assaf''s Microsoft Azure Internal Consumption(d98ee679-4c4d-4a03-9181-ea7a16d0b5a8)'
    AuthenticationType: 'server'
    ServerName: 'devopsdemos.database.windows.net'
    DatabaseName: 'AdventureWorks2016'
    SqlUsername: '$(SQL_USER)'
    SqlPassword: '$(SQL_PASSWORD)'
    deployType: 'DacpacTask'
    DeploymentAction: 'Script'
    DacpacFile: '$(Build.SourcesDirectory)/AdventureWorks/bin/$(buildConfiguration)/AdventureWorks.dacpac'
    PublishProfile: '$(Build.SourcesDirectory)/AdventureWorks/bin/$(buildConfiguration)/AdventureWorks.publish.xml'
    IpDetectionMethod: 'AutoDetect'

- task: PowerShell@2
  displayName: 'Display the schema migration script(s) for diagnostics'
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Migration Scripts"
      Get-ChildItem $(Build.SourcesDirectory)/GeneratedOutputFiles/*.sql | Foreach-Object { 
        Write-Host "*** File: $($_.FullName) ***"
        Get-Content -Path $_
      }